#!/usr/bin/env python3

# SPDX-FileCopyrightText: 2025 Ilya Egorov <0x42005e1f@gmail.com>
# SPDX-License-Identifier: ISC

import sys

from typing import Any, Generator

if sys.version_info >= (3, 11):
    from typing import Self
else:
    from typing_extensions import Self

class BrokenBarrierError(RuntimeError): ...

class Latch:
    def __new__(cls, /, parties: int) -> Self: ...
    def __await__(self, /) -> Generator[Any, Any, None]: ...
    def wait(self, /, timeout: float | None = None) -> None: ...
    def abort(self, /) -> None: ...
    @property
    def waiting(self, /) -> int: ...
    @property
    def broken(self, /) -> bool: ...
    @property
    def parties(self, /) -> int: ...

class Barrier:
    def __new__(cls, /, parties: int) -> Self: ...
    def __await__(self, /) -> Generator[Any, Any, int]: ...
    def wait(self, /, timeout: float | None = None) -> int: ...
    def abort(self, /) -> None: ...
    @property
    def waiting(self, /) -> int: ...
    @property
    def broken(self, /) -> bool: ...
    @property
    def parties(self, /) -> int: ...
